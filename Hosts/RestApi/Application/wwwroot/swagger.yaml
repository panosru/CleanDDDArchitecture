info:
  title: Rest API
  description: Swagger with API version, <a href='/swagger.yaml'>download swagger.yaml</a>
  version: 1.1
  termsOfService: &o0
    absolutePath: /termsofservice
    absoluteUri: *o0
    localPath: /termsofservice
    authority: company.com
    hostNameType: Dns
    isDefaultPort: true
    pathAndQuery: /termsofservice
    segments:
    - /
    - termsofservice
    host: company.com
    port: 443
    query: ''
    fragment: ''
    scheme: https
    originalString: *o0
    dnsSafeHost: company.com
    idnHost: company.com
    isAbsoluteUri: true
    userInfo: ''
  contact:
    name: John Doe
    url: &o1
      absolutePath: /helpdesk
      absoluteUri: *o1
      localPath: /helpdesk
      authority: support.company.com
      hostNameType: Dns
      isDefaultPort: true
      pathAndQuery: /helpdesk
      segments:
      - /
      - helpdesk
      host: support.company.com
      port: 443
      query: ''
      fragment: ''
      scheme: https
      originalString: *o1
      dnsSafeHost: support.company.com
      idnHost: support.company.com
      isAbsoluteUri: true
      userInfo: ''
    email: j.doe@email.com
  license:
    name: MIT
    url:
      absolutePath: /licenses/MIT
      absoluteUri: https://opensource.org/licenses/MIT
      localPath: /licenses/MIT
      authority: opensource.org
      hostNameType: Dns
      isDefaultPort: true
      pathAndQuery: /licenses/MIT
      segments:
      - /
      - licenses/
      - MIT
      host: opensource.org
      port: 443
      query: ''
      fragment: ''
      scheme: https
      originalString: https://opensource.org/licenses/MIT
      dnsSafeHost: opensource.org
      idnHost: opensource.org
      isAbsoluteUri: true
      userInfo: ''
servers: []
paths:
  /api/account/{id}:
    operations:
      Put:
        tags:
        - name: Account
        summary: Update account details
        parameters:
        - name: id
          in: Path
          description: ''
          required: true
          schema:
            type: string
            format: uuid
            description: ''
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        requestBody:
          description: ''
          content:
            application/json:
              schema: &o2
                allOf: []
                oneOf: []
                anyOf: []
                required: []
                properties: {}
                additionalPropertiesAllowed: true
                enum: []
                reference:
                  type: Schema
                  id: UpdateAccountDto
                  isLocal: true
                  referenceV3: '#/components/schemas/UpdateAccountDto'
                  referenceV2: '#/definitions/UpdateAccountDto'
              examples: {}
              encoding: {}
            text/json:
              schema: *o2
              examples: {}
              encoding: {}
            application/*+json:
              schema: *o2
              examples: {}
              encoding: {}
        responses:
          200:
            description: Returns updated account data.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: AccountUpdateResponse
                    isLocal: true
                    referenceV3: '#/components/schemas/AccountUpdateResponse'
                    referenceV2: '#/definitions/AccountUpdateResponse'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: AccountUpdateResponse
                    isLocal: true
                    referenceV3: '#/components/schemas/AccountUpdateResponse'
                    referenceV2: '#/definitions/AccountUpdateResponse'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: AccountUpdateResponse
                    isLocal: true
                    referenceV3: '#/components/schemas/AccountUpdateResponse'
                    referenceV2: '#/definitions/AccountUpdateResponse'
                examples: {}
                encoding: {}
            links: {}
          204:
            description: Account updated
            headers: {}
            content: {}
            links: {}
          400:
            description: Bad request.
            headers: {}
            content: {}
            links: {}
          404:
            description: Not Found.
            headers: {}
            content: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
      Get:
        tags:
        - name: Account
        summary: Get Account
        operationId: GetAccount
        parameters:
        - name: id
          in: Path
          description: ''
          required: true
          schema:
            type: string
            format: uuid
            description: ''
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        responses:
          200:
            description: The account.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: AccountGetByResponse
                    isLocal: true
                    referenceV3: '#/components/schemas/AccountGetByResponse'
                    referenceV2: '#/definitions/AccountGetByResponse'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: AccountGetByResponse
                    isLocal: true
                    referenceV3: '#/components/schemas/AccountGetByResponse'
                    referenceV2: '#/definitions/AccountGetByResponse'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: AccountGetByResponse
                    isLocal: true
                    referenceV3: '#/components/schemas/AccountGetByResponse'
                    referenceV2: '#/definitions/AccountGetByResponse'
                examples: {}
                encoding: {}
            links: {}
          404:
            description: Not Found.
            headers: {}
            content: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
    servers: []
    parameters: []
  /api/account:
    operations:
      Post:
        tags:
        - name: Account
        summary: Create a new account
        parameters:
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        requestBody:
          description: ''
          required: true
          content:
            application/json:
              schema: &o3
                allOf: []
                oneOf: []
                anyOf: []
                required: []
                properties: {}
                additionalPropertiesAllowed: true
                enum: []
                reference:
                  type: Schema
                  id: CreateAccountDto
                  isLocal: true
                  referenceV3: '#/components/schemas/CreateAccountDto'
                  referenceV2: '#/definitions/CreateAccountDto'
              examples: {}
              encoding: {}
            text/json:
              schema: *o3
              examples: {}
              encoding: {}
            application/*+json:
              schema: *o3
              examples: {}
              encoding: {}
        responses:
          200:
            description: Account already exists
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: AccountCreateResponse
                    isLocal: true
                    referenceV3: '#/components/schemas/AccountCreateResponse'
                    referenceV2: '#/definitions/AccountCreateResponse'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: AccountCreateResponse
                    isLocal: true
                    referenceV3: '#/components/schemas/AccountCreateResponse'
                    referenceV2: '#/definitions/AccountCreateResponse'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: AccountCreateResponse
                    isLocal: true
                    referenceV3: '#/components/schemas/AccountCreateResponse'
                    referenceV2: '#/definitions/AccountCreateResponse'
                examples: {}
                encoding: {}
            links: {}
          201:
            description: Account created successfully
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: AccountCreateResponse
                    isLocal: true
                    referenceV3: '#/components/schemas/AccountCreateResponse'
                    referenceV2: '#/definitions/AccountCreateResponse'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: AccountCreateResponse
                    isLocal: true
                    referenceV3: '#/components/schemas/AccountCreateResponse'
                    referenceV2: '#/definitions/AccountCreateResponse'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: AccountCreateResponse
                    isLocal: true
                    referenceV3: '#/components/schemas/AccountCreateResponse'
                    referenceV2: '#/definitions/AccountCreateResponse'
                examples: {}
                encoding: {}
            links: {}
          400:
            description: Bad request.
            headers: {}
            content: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
    servers: []
    parameters: []
  /api/account/confirm/{Token}/{Email}:
    operations:
      Get:
        tags:
        - name: Account
        summary: Confirm user email with token taken from authentication endpoint
        parameters:
        - name: Token
          in: Path
          required: true
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        - name: Email
          in: Path
          required: true
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        responses:
          202:
            description: Email confirmed successfully.
            headers: {}
            content: {}
            links: {}
          401:
            description: Invalid email token.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          200:
            description: Account confirmation.
            headers: {}
            content: {}
            links: {}
          400:
            description: Bad request.
            headers: {}
            content: {}
            links: {}
          404:
            description: Not Found.
            headers: {}
            content: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
    servers: []
    parameters: []
  /api/account/authenticate:
    operations:
      Post:
        tags:
        - name: Account
        summary: Authenticate a user and a bearer or an email confirmation token
        parameters:
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        requestBody:
          description: ''
          content:
            application/json:
              schema: &o4
                allOf: []
                oneOf: []
                anyOf: []
                required: []
                properties: {}
                additionalPropertiesAllowed: true
                enum: []
                reference:
                  type: Schema
                  id: AuthenticateDto
                  isLocal: true
                  referenceV3: '#/components/schemas/AuthenticateDto'
                  referenceV2: '#/definitions/AuthenticateDto'
              examples: {}
              encoding: {}
            text/json:
              schema: *o4
              examples: {}
              encoding: {}
            application/*+json:
              schema: *o4
              examples: {}
              encoding: {}
        responses:
          202:
            description: Success
            headers: {}
            content: {}
            links: {}
          401:
            description: Invalid credentials or mail not confirmed.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          200:
            description: Email confirmation required.
            headers: {}
            content: {}
            links: {}
          201:
            description: Login successful.
            headers: {}
            content: {}
            links: {}
          400:
            description: Bad request.
            headers: {}
            content: {}
            links: {}
          404:
            description: Not found.
            headers: {}
            content: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
    servers: []
    parameters: []
  /metal:
    operations:
      Get:
        tags:
        - name: Metal
        summary: Metal info
        parameters:
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        responses:
          default:
            description: Error
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          200:
            description: Metal data.
            headers: {}
            content: {}
            links: {}
          404:
            description: Not Found.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
    servers: []
    parameters: []
  /api/todoitems/updatedetails/{id}:
    operations:
      Put:
        tags:
        - name: TodoItems
        summary: Update todo item details
        parameters:
        - name: id
          in: Query
          description: ''
          schema:
            type: integer
            format: int32
            description: ''
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        - name: id
          in: Path
          required: true
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        requestBody:
          description: ''
          content:
            application/json:
              schema: &o5
                allOf: []
                oneOf: []
                anyOf: []
                required: []
                properties: {}
                additionalPropertiesAllowed: true
                enum: []
                reference:
                  type: Schema
                  id: TodoItemUpdateDetailsDto
                  isLocal: true
                  referenceV3: '#/components/schemas/TodoItemUpdateDetailsDto'
                  referenceV2: '#/definitions/TodoItemUpdateDetailsDto'
              examples: {}
              encoding: {}
            text/json:
              schema: *o5
              examples: {}
              encoding: {}
            application/*+json:
              schema: *o5
              examples: {}
              encoding: {}
        responses:
          default:
            description: Error
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          200:
            description: Todo item details updated successfully.
            headers: {}
            content: {}
            links: {}
          400:
            description: Bad request.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          404:
            description: Not Found.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
    servers: []
    parameters: []
  /api/todoitems/{id}:
    operations:
      Put:
        tags:
        - name: TodoItems
        summary: Update todo item name and status
        parameters:
        - name: id
          in: Path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
            description: ''
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        requestBody:
          description: ''
          content:
            application/json:
              schema: &o6
                allOf: []
                oneOf: []
                anyOf: []
                required: []
                properties: {}
                additionalPropertiesAllowed: true
                enum: []
                reference:
                  type: Schema
                  id: TodoItemUpdateDto
                  isLocal: true
                  referenceV3: '#/components/schemas/TodoItemUpdateDto'
                  referenceV2: '#/definitions/TodoItemUpdateDto'
              examples: {}
              encoding: {}
            text/json:
              schema: *o6
              examples: {}
              encoding: {}
            application/*+json:
              schema: *o6
              examples: {}
              encoding: {}
        responses:
          default:
            description: Error
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          204:
            description: Todo item updated
            headers: {}
            content: {}
            links: {}
          400:
            description: Bad request.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          404:
            description: Not Found.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
      Get:
        tags:
        - name: TodoItems
        summary: Get a todo item
        operationId: GetTodoItem
        parameters:
        - name: id
          in: Path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
            description: ''
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        responses:
          default:
            description: Error
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          200:
            description: The todo item.
            headers: {}
            content: {}
            links: {}
          404:
            description: Not Found.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
      Delete:
        tags:
        - name: TodoItems
        summary: Delete a todo item
        parameters:
        - name: id
          in: Path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
            description: ''
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        responses:
          default:
            description: Error
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          200:
            description: Todo item deleted successfully.
            headers: {}
            content: {}
            links: {}
          400:
            description: Bad request.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          404:
            description: Not Found.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
    servers: []
    parameters: []
  /api/todoitems:
    operations:
      Post:
        tags:
        - name: TodoItems
        summary: Create a new todo item
        parameters:
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        requestBody:
          description: ''
          content:
            application/json:
              schema: &o7
                allOf: []
                oneOf: []
                anyOf: []
                required: []
                properties: {}
                additionalPropertiesAllowed: true
                enum: []
                reference:
                  type: Schema
                  id: TodoItemCreateDto
                  isLocal: true
                  referenceV3: '#/components/schemas/TodoItemCreateDto'
                  referenceV2: '#/definitions/TodoItemCreateDto'
              examples: {}
              encoding: {}
            text/json:
              schema: *o7
              examples: {}
              encoding: {}
            application/*+json:
              schema: *o7
              examples: {}
              encoding: {}
        responses:
          200:
            description: Todo item already exists
            headers: {}
            content: {}
            links: {}
          201:
            description: Todo item created successfully
            headers: {}
            content: {}
            links: {}
          400:
            description: Bad request.
            headers: {}
            content: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
    servers: []
    parameters: []
  /api/todolists/{id}:
    operations:
      Put:
        tags:
        - name: TodoLists
        summary: Update a todo list
        parameters:
        - name: id
          in: Path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
            description: ''
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        requestBody:
          description: ''
          content:
            application/json:
              schema: &o8
                allOf: []
                oneOf: []
                anyOf: []
                required: []
                properties: {}
                additionalPropertiesAllowed: true
                enum: []
                reference:
                  type: Schema
                  id: UpdateTodoListDto
                  isLocal: true
                  referenceV3: '#/components/schemas/UpdateTodoListDto'
                  referenceV2: '#/definitions/UpdateTodoListDto'
              examples: {}
              encoding: {}
            text/json:
              schema: *o8
              examples: {}
              encoding: {}
            application/*+json:
              schema: *o8
              examples: {}
              encoding: {}
        responses:
          default:
            description: Error
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          204:
            description: Todo list updated successfully.
            headers: {}
            content: {}
            links: {}
          400:
            description: Bad request.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          404:
            description: Not Found.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
      Get:
        tags:
        - name: TodoLists
        summary: Get all todo lists with their items
        parameters:
        - name: id
          in: Path
          required: true
          schema:
            type: integer
            format: int32
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        responses:
          default:
            description: Error
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          200:
            description: Todo list expored successfully.
            headers: {}
            content: {}
            links: {}
          404:
            description: Not Found.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
      Delete:
        tags:
        - name: TodoLists
        summary: Delete a todo list
        parameters:
        - name: id
          in: Path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
            description: ''
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        responses:
          default:
            description: Error
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          200:
            description: Todo list deleted successfully.
            headers: {}
            content: {}
            links: {}
          400:
            description: Bad request.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          404:
            description: Not Found.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
    servers: []
    parameters: []
  /api/todolists:
    operations:
      Get:
        tags:
        - name: TodoLists
        summary: Get all todo lists with their items
        parameters:
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        responses:
          default:
            description: Error
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          200:
            description: The list of all todo lists with their items.
            headers: {}
            content: {}
            links: {}
          404:
            description: Not Found.
            headers: {}
            content: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
      Post:
        tags:
        - name: TodoLists
        summary: Create new todo list
        parameters:
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        requestBody:
          description: ''
          content:
            application/json:
              schema: &o9
                allOf: []
                oneOf: []
                anyOf: []
                required: []
                properties: {}
                additionalPropertiesAllowed: true
                enum: []
                reference:
                  type: Schema
                  id: CreateTodoListDto
                  isLocal: true
                  referenceV3: '#/components/schemas/CreateTodoListDto'
                  referenceV2: '#/definitions/CreateTodoListDto'
              examples: {}
              encoding: {}
            text/json:
              schema: *o9
              examples: {}
              encoding: {}
            application/*+json:
              schema: *o9
              examples: {}
              encoding: {}
        responses:
          200:
            description: Todo list already exists
            headers: {}
            content: {}
            links: {}
          201:
            description: Todo list created successfully
            headers: {}
            content: {}
            links: {}
          400:
            description: Bad request.
            headers: {}
            content: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
    servers: []
    parameters: []
  /api/weather:
    operations:
      Post:
        tags:
        - name: Weather
        summary: Dummy weather syncing with external service (3 seconds delay)
        parameters:
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        requestBody:
          description: ''
          content:
            application/json:
              schema: &o10
                allOf: []
                oneOf: []
                anyOf: []
                required: []
                properties: {}
                additionalPropertiesAllowed: true
                enum: []
                reference:
                  type: Schema
                  id: SyncWeatherServiceDto
                  isLocal: true
                  referenceV3: '#/components/schemas/SyncWeatherServiceDto'
                  referenceV2: '#/definitions/SyncWeatherServiceDto'
              examples: {}
              encoding: {}
            text/json:
              schema: *o10
              examples: {}
              encoding: {}
            application/*+json:
              schema: *o10
              examples: {}
              encoding: {}
        responses:
          default:
            description: Error
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          200:
            description: Synchornisation successfully comleted.
            headers: {}
            content: {}
            links: {}
          400:
            description: Bad request.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          404:
            description: Not Found.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
      Get:
        tags:
        - name: Weather
        summary: Performs weather forecast
        parameters:
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        responses:
          default:
            description: Error
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
          200:
            description: Todo list already exists
            headers: {}
            content: {}
            links: {}
          404:
            description: Not found.
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: ProblemDetails
                    isLocal: true
                    referenceV3: '#/components/schemas/ProblemDetails'
                    referenceV2: '#/definitions/ProblemDetails'
                examples: {}
                encoding: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
    servers: []
    parameters: []
  /api/weather/addcity:
    operations:
      Post:
        tags:
        - name: Weather
        summary: Adds an additional city for weather forecasting
        parameters:
        - name: x-api-version
          in: Header
          description: The requested API version
          schema:
            type: string
            allOf: []
            oneOf: []
            anyOf: []
            required: []
            properties: {}
            additionalPropertiesAllowed: true
            enum: []
          examples: {}
          content: {}
        requestBody:
          description: ''
          content:
            application/json:
              schema: &o11
                allOf: []
                oneOf: []
                anyOf: []
                required: []
                properties: {}
                additionalPropertiesAllowed: true
                enum: []
                reference:
                  type: Schema
                  id: AddCityDto
                  isLocal: true
                  referenceV3: '#/components/schemas/AddCityDto'
                  referenceV2: '#/definitions/AddCityDto'
              examples: {}
              encoding: {}
            text/json:
              schema: *o11
              examples: {}
              encoding: {}
            application/*+json:
              schema: *o11
              examples: {}
              encoding: {}
        responses:
          200:
            description: City added successfully
            headers: {}
            content:
              text/plain:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: AddCityResponse
                    isLocal: true
                    referenceV3: '#/components/schemas/AddCityResponse'
                    referenceV2: '#/definitions/AddCityResponse'
                examples: {}
                encoding: {}
              application/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: AddCityResponse
                    isLocal: true
                    referenceV3: '#/components/schemas/AddCityResponse'
                    referenceV2: '#/definitions/AddCityResponse'
                examples: {}
                encoding: {}
              text/json:
                schema:
                  allOf: []
                  oneOf: []
                  anyOf: []
                  required: []
                  properties: {}
                  additionalPropertiesAllowed: true
                  enum: []
                  reference:
                    type: Schema
                    id: AddCityResponse
                    isLocal: true
                    referenceV3: '#/components/schemas/AddCityResponse'
                    referenceV2: '#/definitions/AddCityResponse'
                examples: {}
                encoding: {}
            links: {}
          201:
            description: City added successfully
            headers: {}
            content: {}
            links: {}
          400:
            description: Bad request.
            headers: {}
            content: {}
            links: {}
        callbacks: {}
        security: []
        servers: []
    servers: []
    parameters: []
components:
  schemas:
    UpdateAccountDto:
      type: object
      allOf: []
      oneOf: []
      anyOf: []
      required:
      - email
      - firstName
      - lastName
      properties:
        firstName:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
        lastName:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
        email:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
      enum: []
    AccountUpdateResponse:
      type: object
      allOf: []
      oneOf: []
      anyOf: []
      required: []
      properties:
        firstName:
          type: string
          readOnly: true
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
        lastName:
          type: string
          readOnly: true
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
        email:
          type: string
          readOnly: true
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
      enum: []
    AccountGetByResponse:
      type: object
      allOf: []
      oneOf: []
      anyOf: []
      required: []
      properties:
        username:
          type: string
          readOnly: true
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
        firstName:
          type: string
          readOnly: true
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
        lastName:
          type: string
          readOnly: true
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
        email:
          type: string
          readOnly: true
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
      enum: []
    CreateAccountDto:
      type: object
      allOf: []
      oneOf: []
      anyOf: []
      required:
      - email
      - firstName
      - lastName
      - password
      - userName
      properties:
        userName:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
        password:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
        firstName:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
        lastName:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
        email:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
      enum: []
    AccountCreateResponse:
      type: object
      allOf: []
      oneOf: []
      anyOf: []
      required: []
      properties:
        message:
          type: string
          readOnly: true
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
        username:
          type: string
          readOnly: true
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
        firstName:
          type: string
          readOnly: true
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
        lastName:
          type: string
          readOnly: true
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
        email:
          type: string
          readOnly: true
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
      enum: []
    ProblemDetails:
      type: object
      allOf: []
      oneOf: []
      anyOf: []
      required: []
      properties:
        type:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
        title:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
        status:
          type: integer
          format: int32
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
        detail:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
        instance:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
      additionalPropertiesAllowed: true
      additionalProperties:
        allOf: []
        oneOf: []
        anyOf: []
        required: []
        properties: {}
        additionalPropertiesAllowed: true
        enum: []
      enum: []
    AuthenticateDto:
      type: object
      allOf: []
      oneOf: []
      anyOf: []
      required:
      - password
      - username
      properties:
        username:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
        password:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
      enum: []
    PriorityLevel:
      type: integer
      format: int32
      allOf: []
      oneOf: []
      anyOf: []
      required: []
      properties: {}
      additionalPropertiesAllowed: true
      enum:
      - {}
      - value: 1
      - value: 2
      - value: 3
    TodoItemUpdateDetailsDto:
      type: object
      allOf: []
      oneOf: []
      anyOf: []
      required:
      - id
      - listId
      - note
      - priority
      properties:
        id:
          type: integer
          format: int32
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
        listId:
          type: integer
          format: int32
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
        priority:
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          reference:
            type: Schema
            id: PriorityLevel
            isLocal: true
            referenceV3: '#/components/schemas/PriorityLevel'
            referenceV2: '#/definitions/PriorityLevel'
        note:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
      enum: []
    TodoItemUpdateDto:
      type: object
      allOf: []
      oneOf: []
      anyOf: []
      required:
      - done
      - id
      - title
      properties:
        id:
          type: integer
          format: int32
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
        title:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
        done:
          type: boolean
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
      enum: []
    TodoItemCreateDto:
      type: object
      allOf: []
      oneOf: []
      anyOf: []
      required:
      - listId
      - title
      properties:
        listId:
          type: integer
          format: int32
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
        title:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
      enum: []
    UpdateTodoListDto:
      type: object
      allOf: []
      oneOf: []
      anyOf: []
      required:
      - id
      - title
      properties:
        id:
          type: integer
          format: int32
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
        title:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
      enum: []
    CreateTodoListDto:
      type: object
      allOf: []
      oneOf: []
      anyOf: []
      required:
      - title
      properties:
        title:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
      enum: []
    SyncWeatherServiceDto:
      type: object
      allOf: []
      oneOf: []
      anyOf: []
      required:
      - city
      properties:
        city:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
      enum: []
    AddCityDto:
      type: object
      allOf: []
      oneOf: []
      anyOf: []
      required:
      - city
      properties:
        city:
          type: string
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
      enum: []
    AddCityResponse:
      type: object
      allOf: []
      oneOf: []
      anyOf: []
      required: []
      properties:
        message:
          type: string
          readOnly: true
          allOf: []
          oneOf: []
          anyOf: []
          required: []
          properties: {}
          additionalPropertiesAllowed: true
          enum: []
          nullable: true
      enum: []
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes:
    Bearer:
      description: 'Type into the textbox: Bearer {your JWT token}.'
      name: Authorization
      in: Header
  links: {}
  callbacks: {}
securityRequirements:
- ? reference:
      type: SecurityScheme
      id: Bearer
      isLocal: true
      referenceV3: Bearer
      referenceV2: Bearer
  : []
tags: []

